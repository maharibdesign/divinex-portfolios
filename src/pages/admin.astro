---
import MainLayout from '../layouts/MainLayout.astro';
import { type Product } from '../types';
import '../styles/admin.css'; // Import the new shared styles

let products: Product[] = [];
try {
  const response = await fetch(`${Astro.url.origin}/api/products/get`);
  if (response.ok) { products = await response.json() as Product[]; }
} catch (error) { console.error("Fetch failed for admin page:", error); }
---
<MainLayout title="Admin Panel - Storeka">
  <div class="admin-panel">
    <header class="admin-header">
      <h1>Admin Panel</h1>
      <a href="/" class="back-link">‚Üê Back to Store</a>
    </header>

    <section class="admin-section">
      <h2>Add New Product</h2>
      <form id="add-product-form" class="product-form">
        <label>Title <input type="text" name="title" required /></label>
        <label>Description <textarea name="description" rows="4" required></textarea></label>
        <div class="form-row">
          <label>Category
            <select name="category" required>
              <option value="Phones">Phones</option><option value="Laptops">Laptops</option>
              <option value="Watches">Watches</option><option value="Accessories">Accessories</option>
            </select>
          </label>
          <label>Price <input type="number" name="price" step="0.01" required /></label>
        </div>
        <label>Main Image <input type="file" id="main-image-upload" accept="image/*" required /></label>
        <input type="hidden" name="image" id="main-image-url" />
        <input type="hidden" name="images" id="gallery-images-url" />
        <div class="form-actions">
          <div id="form-status" class="upload-status"></div>
          <a href="/admin" class="btn btn-secondary">Cancel</a>
          <button type="submit" id="submit-btn" class="btn btn-primary">Add Product</button>
        </div>
      </form>
    </section>

    <section class="admin-section">
      <h2>Manage Existing Products</h2>
      <ul class="product-list" id="product-list">
        {products.map(product => (
          <li>
            <img src={product.image || '/favicon.svg'} alt={product.title || ''} class="product-thumb" />
            <span class="product-title">{product.title || 'Untitled'}</span>
            <div class="product-actions">
              <a href={`/admin/edit/${product.id}`} class="btn-action btn-edit">Edit</a>
              <button class="btn-action btn-delete" data-product-id={product.id}>Delete</button>
            </div>
          </li>
        ))}
      </ul>
    </section>
  </div>
</MainLayout>
<script>
  const addForm = document.getElementById('add-product-form');
  const mainImageUpload = document.getElementById('main-image-upload');
  const mainImageUrlInput = document.getElementById('main-image-url');
  const galleryImagesUrlInput = document.getElementById('gallery-images-url');
  const submitBtn = document.getElementById('submit-btn');
  const formStatus = document.getElementById('form-status');
  const productList = document.getElementById('product-list');

  async function uploadFile(file) {
    const response = await fetch('/api/products/upload', {
      method: 'POST',
      body: file,
      headers: { 'Content-Type': file.type }
    });
    if (!response.ok) {
      const result = await response.json();
      throw new Error(`Upload failed: ${result.error}`);
    }
    const result = await response.json();
    return result.url;
  }

  addForm?.addEventListener('submit', async (e) => {
    e.preventDefault();
    submitBtn.disabled = true;
    formStatus.textContent = 'Uploading image...';

    const mainImageFile = mainImageUpload.files[0];
    if (!mainImageFile) {
      alert('Please select a main image.');
      submitBtn.disabled = false;
      formStatus.textContent = '';
      return;
    }

    try {
      const uploadedImageUrl = await uploadFile(mainImageFile);
      mainImageUrlInput.value = uploadedImageUrl;
      galleryImagesUrlInput.value = JSON.stringify([uploadedImageUrl]);
      formStatus.textContent = 'Image uploaded! Submitting product...';

      const formData = new FormData(addForm);
      const productData = {
        title: formData.get('title'),
        description: formData.get('description'),
        category: formData.get('category'),
        price: parseFloat(formData.get('price') as string),
        image: formData.get('image'),
        images: JSON.parse(formData.get('images') as string)
      };

      const productResponse = await fetch('/api/products/add', {
        method: 'POST', headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(productData),
      });

      if (productResponse.ok) {
        alert('Product added successfully!');
        window.location.reload();
      } else {
        const result = await productResponse.json();
        throw new Error(`Failed to add product data: ${result.error}`);
      }

    } catch (error) {
      alert(`An error occurred: ${error.message}`);
      formStatus.textContent = '';
      submitBtn.disabled = false;
    }
  });

  productList?.addEventListener('click', async (e) => {
    const target = e.target as HTMLElement;
    if (target.matches('.btn-delete')) {
      const productId = target.dataset.productId;
      if (!productId) return;
      if (confirm('Are you sure you want to delete this product?')) {
        const response = await fetch('/api/products/delete', {
          method: 'POST', headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id: productId }),
        });
        if (response.ok) {
          target.closest('li')?.remove();
          alert('Product deleted.');
        } else {
          const result = await response.json();
          alert(`Error deleting product: ${result.error}`);
        }
      }
    }
  });
</script>