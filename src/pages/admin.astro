---
import MainLayout from '../layouts/MainLayout.astro';
import type { Product } from '../../types';

let products: Product[] = [];
try {
  const response = await fetch(`${Astro.url.origin}/api/products/get`);
  if (response.ok) {
    products = await response.json() as Product[];
  }
} catch (error) {
  console.error("Fetch failed for admin page:", error);
}
---
<MainLayout title="Admin Panel - Storeka">
  <div class="admin-panel">
    <h1>Admin Panel</h1>

    <section class="admin-section">
      <h2>Add New Product</h2>
      <form id="add-product-form" class="product-form">
        <label>Title <input type="text" name="title" required /></label>
        <label>Description <textarea name="description" rows="4" required></textarea></label>
        <div class="form-row">
          <label>Category
            <select name="category" required>
              <option value="Phones">Phones</option>
              <option value="Laptops">Laptops</option>
              <option value="Watches">Watches</option>
              <option value="Accessories">Accessories</option>
            </select>
          </label>
          <label>Price <input type="number" name="price" step="0.01" required /></label>
        </div>
        <label>Main Image URL <input type="text" name="image" placeholder="/images/name.jpg or https://..." required /></label>
        <label>Gallery Image URLs (as a JSON array)
          <input type="text" name="images" placeholder='["/images/img1.jpg"]' required />
        </label>
        <button type="submit">Add Product</button>
      </form>
    </section>

    <section class="admin-section">
      <h2>Manage Existing Products</h2>
      <ul class="product-list" id="product-list">
        {products.map(product => (
          <li data-product-id={product.id}>
            <img src={product.image || '/favicon.svg'} alt={product.title || ''} class="product-thumb" />
            <span class="product-title">{product.title || 'Untitled'}</span>
            <div class="product-actions">
              <!-- !!! UPDATED: The Edit button is now a link !!! -->
              <a href={`/admin/edit/${product.id}`} class="edit-btn">Edit</a>
              <button class="delete-btn">Delete</button>
            </div>
          </li>
        ))}
      </ul>
    </section>
  </div>
</MainLayout>

<!-- The script and style tags remain the same -->
<script>
  const addForm = document.getElementById('add-product-form') as HTMLFormElement;
  const productList = document.getElementById('product-list');
  addForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(addForm);
    const productData = Object.fromEntries(formData.entries());
    productData.price = parseFloat(productData.price as string);
    try {
      productData.images = JSON.parse(productData.images as string);
    } catch {
      alert('Error: Invalid format for Gallery Image URLs.'); return;
    }
    const response = await fetch('/api/products/add', {
      method: 'POST', headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(productData),
    });
    if (response.ok) {
      alert('Product added successfully!'); window.location.reload();
    } else {
      const result = await response.json(); alert(`Error: ${result.error}`);
    }
  });
  productList?.addEventListener('click', async (e) => {
    const target = e.target as HTMLElement;
    if (target.matches('.delete-btn')) {
      const productItem = target.closest('li');
      if (!productItem) return;
      const productId = productItem.dataset.productId;
      if (!productId) return;
      if (confirm('Are you sure you want to delete this product?')) {
        const response = await fetch('/api/products/delete', {
          method: 'POST', headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id: productId }),
        });
        if (response.ok) {
          productItem.remove(); alert('Product deleted.');
        } else {
          const result = await response.json(); alert(`Error: ${result.error}`);
        }
      }
    }
  });
</script>
<style>
  .admin-panel { max-width: 800px; margin: 0 auto; }
  .admin-section { background-color: var(--secondary-bg-color); padding: 1.5rem; border-radius: 16px; margin-bottom: 2rem; }
  h1, h2 { border-bottom: 1px solid var(--border-color); padding-bottom: 0.5rem; margin-top: 0; }
  .product-form { display: flex; flex-direction: column; gap: 1rem; }
  .product-form label { font-weight: 500; display: flex; flex-direction: column; gap: 0.25rem; }
  .product-form input, .product-form textarea, .product-form select {
    width: 100%; padding: 0.75rem; font-size: 1rem; border-radius: 8px;
    border: 1px solid var(--border-color); background-color: var(--bg-color); color: var(--text-color);
  }
  .form-row { display: flex; gap: 1rem; }
  .form-row > label { flex: 1; }
  .product-form button {
    background-color: var(--button-color); color: var(--button-text-color); padding: 0.75rem; border: none;
    border-radius: 8px; font-size: 1rem; font-weight: 600; cursor: pointer; margin-top: 1rem;
  }
  .product-list { list-style: none; padding: 0; margin: 0; display: flex; flex-direction: column; gap: 0.5rem; }
  .product-list li { display: flex; align-items: center; gap: 1rem; padding: 0.75rem; border-radius: 8px; background-color: var(--bg-color); }
  .product-thumb { width: 40px; height: 40px; object-fit: cover; border-radius: 4px; }
  .product-title { flex-grow: 1; font-weight: 500; }
  .product-actions { display: flex; gap: 0.5rem; }
  .product-actions a, .product-actions button {
    font-size: 0.8rem; padding: 0.4rem 0.8rem; border-radius: 6px; border: none; cursor: pointer;
    text-decoration: none; display: inline-block;
  }
  .edit-btn { background-color: #ff9500; color: white; }
  .delete-btn { background-color: #ff3b30; color: white; }
</style>