---
import MainLayout from '../../layouts/MainLayout.astro';
import { type Product } from '../../types'; // CORRECTED PATH

let products: Product[] = [];
try {
  const response = await fetch(`${Astro.url.origin}/api/products/get`);
  if (response.ok) {
    products = await response.json() as Product[];
  }
} catch (error) {
  console.error("Fetch failed for admin page:", error);
}
---
<MainLayout title="Admin Panel - Storeka">
  <div class="admin-panel">
    <h1>Admin Panel</h1>
    <section class="admin-section">
      <h2>Add New Product</h2>
      <form id="add-product-form" class="product-form"><!-- ... form contents ... --></form>
    </section>
    <section class="admin-section">
      <h2>Manage Existing Products</h2>
      <ul class="product-list" id="product-list">
        {products.map(product => (
          <li data-product-id={product.id}>
            <img src={product.image || '/favicon.svg'} alt={product.title || ''} class="product-thumb" />
            <span class="product-title">{product.title || 'Untitled'}</span>
            <div class="product-actions">
              <a href={`/admin/edit/${product.id}`} class="edit-btn">Edit</a>
              <button class="delete-btn">Delete</button>
            </div>
          </li>
        ))}
      </ul>
    </section>
  </div>
</MainLayout>

<!-- The form HTML from the previous step is unchanged, only the script and style are here -->
<script>
  const addForm = document.getElementById('add-product-form') as HTMLFormElement;
  const productList = document.getElementById('product-list');
  addForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(addForm);
    
    // CORRECTED: Create a new object for the payload
    const productData = {
      title: formData.get('title'),
      description: formData.get('description'),
      category: formData.get('category'),
      price: parseFloat(formData.get('price') as string),
      image: formData.get('image'),
      images: JSON.parse(formData.get('images') as string)
    };

    const response = await fetch('/api/products/add', {
      method: 'POST', headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(productData),
    });
    if (response.ok) {
      alert('Product added successfully!'); window.location.reload();
    } else {
      const result = await response.json(); alert(`Error: ${result.error}`);
    }
  });
  productList?.addEventListener('click', async (e) => { /* ... delete logic is unchanged ... */ });
</script>
<style>
  /* ... styles are unchanged ... */
</style>