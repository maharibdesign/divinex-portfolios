---
import MainLayout from '../../layouts/MainLayout.astro';
import { supabase } from '../../lib/supabase';
import { type Project } from '@/lib/types';
import { marked } from 'marked';

const { id } = Astro.params;
let project: Project | null = null;

if (id && !isNaN(Number(id))) {
  const { data } = await supabase.from('projects').select('*').eq('id', id).single();
  project = data as Project;
}

if (!project) {
  return Astro.redirect('/404');
}

// !!! THIS IS THE DEFINITIVE FIX !!!
const { title, client, category, content, gallery_images, project_link } = project;

// We perform a safe cast. First, we check if it's an array.
// Then we tell TypeScript to treat it as an array of strings (`as string[]`).
const imageArray: string[] = Array.isArray(gallery_images) ? (gallery_images as string[]) : [];

const parsedContent = content ? await marked.parse(content) : '';
---
<MainLayout title={title || 'Project Details'}>
  <article class="case-study">
    <header class="case-study-header">
      <a href="/" class="back-link">&larr; Back to Portfolio</a>
      <p class="project-meta">{category || 'Uncategorized'} &bull; {client || 'Personal Project'}</p>
      <h1>{title || 'Untitled Project'}</h1>
    </header>

    <div class="project-content" set:html={parsedContent} />
    
    {project_link && (
      <a href={project_link} class="cta-button" target="_blank" rel="noopener noreferrer">
        View Live Project &rarr;
      </a>
    )}

    <div class="project-gallery">
      <h2>Project Gallery</h2>
      {/* Now TypeScript knows that 'imageArray' is a string[] and 'img' is a string. */}
      {imageArray.map((img) => (
        <div class="image-wrapper">
          <img src={img} alt={title || 'Project gallery image'} loading="lazy" />
        </div>
      ))}
    </div>
  </article>
</MainLayout>

<style>
  .case-study { max-width: 900px; margin: 0 auto; padding: 1rem 0 4rem; }
  .case-study-header { text-align: center; margin-bottom: 3rem; border-bottom: 1px solid var(--border-color); padding-bottom: 2rem; }
  .back-link { display: inline-block; margin-bottom: 2rem; font-weight: 500; color: var(--hint-color); }
  .project-meta { font-weight: 600; color: var(--hint-color); margin-bottom: 0.5rem; }
  .case-study-header h1 { font-size: 3.5rem; font-weight: 800; margin: 0; line-height: 1.1; }
  .project-content { font-size: 1.1rem; line-height: 1.8; }
  .project-content :global(h2), .project-content :global(h3) { margin-top: 3rem; margin-bottom: 1rem; border-bottom: 1px solid var(--border-color); padding-bottom: 0.5rem; }
  .project-content :global(p) { margin-bottom: 1.5rem; }
  .project-content :global(ul), .project-content :global(ol) { padding-left: 1.5rem; }
  .cta-button { display: inline-block; margin: 2rem 0; padding: 1rem 2rem; font-size: 1.1rem; font-weight: 600; text-align: center; color: var(--button-text-color); background-color: var(--button-color); border-radius: 12px; text-decoration: none; transition: transform 0.2s; }
  .cta-button:hover { transform: scale(1.05); }
  .project-gallery { margin-top: 4rem; border-top: 1px solid var(--border-color); padding-top: 3rem; }
  .project-gallery h2 { text-align: center; font-size: 2rem; margin-bottom: 2rem; }
  .image-wrapper { width: 100%; border-radius: 24px; overflow: hidden; margin-bottom: 1.5rem; background-color: var(--secondary-bg-color); }
  .image-wrapper img { width: 100%; height: auto; display: block; }
</style>