---
import MainLayout from '../../layouts/MainLayout.astro';
import { TELEGRAM_CONTACT_LINK } from '../../lib/constants';
import { supabase } from '../../lib/supabase';
import { type Product } from '../../types';

const { id } = Astro.params;
let product: Product | null = null;
let fetchError: string | null = null;
if (!id || isNaN(Number(id))) { fetchError = "Invalid Product ID provided."; } 
else {
  try {
    const { data, error } = await supabase.from('products').select('*').eq('id', id).single();
    if (error) { fetchError = `Product not found: ${error.message}`; } 
    else { product = data as Product; }
  } catch (e) { fetchError = 'A server error occurred.'; }
}
if (!product) { return new Response(`Error: ${fetchError || 'Product could not be loaded.'}`, { status: 404 }); }

const { title, price, images, category, description } = product;
const imageArray = Array.isArray(images) ? images : (product.image ? [product.image] : []);
---
<MainLayout title={title || 'Product Details'}>
  <a href="/" class="back-link">‚Üê Back to Catalog</a>
  <div class="product-detail">
    <div class="product-images">
      {imageArray.length > 0 ? (
        imageArray.map(img => (
          <div class="image-wrapper"><img src={img} alt={title || 'Product'} loading="lazy" /></div>
        ))
      ) : ( <div class="placeholder-image">No Image Available</div> )}
    </div>
    <div class="product-info">
      <p class="category">{category || 'Uncategorized'}</p>
      <h1>{title || 'Untitled Product'}</h1>
      <div class="price">${(price || 0).toFixed(2)}</div>
      <div class="description"><p>{description || 'No description available.'}</p></div>
      <a href={TELEGRAM_CONTACT_LINK} class="cta-button" target="_blank">Order on Telegram</a>
    </div>
  </div>
</MainLayout>
<style>
  .back-link { display: inline-block; margin-bottom: 2rem; font-weight: 500; color: var(--link-color); }
  .product-detail{display:grid;grid-template-columns:1fr;gap:2rem;}
  @media(min-width:768px){.product-detail{grid-template-columns:minmax(0,2fr) minmax(0,1fr);gap:3rem;}}
  .product-images { display: flex; flex-direction: column; gap: 1rem; }
  .image-wrapper {
    width: 100%; aspect-ratio: 1.618 / 1; border-radius: 24px;
    background-color: var(--secondary-bg-color); padding: 1rem; overflow: hidden;
  }
  .product-images img { width: 100%; height: 100%; object-fit: contain; }
  .placeholder-image { 
    width:100%; aspect-ratio:1.618 / 1; border-radius:24px;
    background-color:var(--secondary-bg-color); display: grid; place-content: center;
    color: var(--hint-color); 
  }
  .product-info{padding:1rem;}
  .category{font-weight:600;color:var(--hint-color);margin-bottom:.5rem;}
  h1{font-size:2.5rem;margin:0 0 .5rem;line-height:1.2;}
  .price{font-size:2rem;font-weight:700;color:var(--link-color);margin-bottom:1.5rem;}
  .description p{font-size:1.1rem;line-height:1.7;color:var(--text-color); opacity: 0.9;}
  .cta-button{display:block;width:100%;padding:1rem;font-size:1.1rem;font-weight:600;text-align:center;color:var(--button-text-color);background-color:var(--button-color);border-radius:16px;margin-top:2rem;transition:transform .2s;}
  .cta-button:hover{transform:scale(1.03);}
</style>