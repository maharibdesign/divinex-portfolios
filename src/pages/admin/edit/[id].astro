---
import MainLayout from '../../../layouts/MainLayout.astro';
import { supabase } from '../../../lib/supabase';
import { type Product } from '../../../types';

const { id } = Astro.params;
let product: Product | null = null;

if (id) {
  const { data } = await supabase.from('products').select('*').eq('id', id).single();
  product = data as Product;
}

if (!product) {
  return new Response("Product not found", { status: 404 });
}
---
<MainLayout title={`Edit: ${product.title}`}>
  <div class="admin-panel">
    <a href="/admin" class="back-link">‚Üê Back to Admin Panel</a>
    <h1>Edit: {product.title || 'Untitled'}</h1>
    
    <section class="admin-section">
      <form id="edit-product-form" class="product-form">
        <input type="hidden" name="id" value={product.id} />
        <label>Title <input type="text" name="title" value={product.title || ''} required /></label>
        <label>Description <textarea name="description" rows="4" required>{product.description || ''}</textarea></label>
        <div class="form-row">
          <label>Category
            <select name="category" required>
              <option value="Phones" selected={product.category === 'Phones'}>Phones</option>
              <option value="Laptops" selected={product.category === 'Laptops'}>Laptops</option>
              <option value="Watches" selected={product.category === 'Watches'}>Watches</option>
              <option value="Accessories" selected={product.category === 'Accessories'}>Accessories</option>
            </select>
          </label>
          <label>Price <input type="number" name="price" step="0.01" value={product.price || 0} required /></label>
        </div>
        <label>Main Image URL <input type="text" name="image" value={product.image || ''} required /></label>
        <label>Gallery Image URLs (as a JSON array)
          <input type="text" name="images" value={JSON.stringify(product.images || [])} required />
        </label>
        <button type="submit">Save Changes</button>
      </form>
    </section>
  </div>
</MainLayout>

<script>
  const editForm = document.getElementById('edit-product-form') as HTMLFormElement;
  editForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(editForm);
    const productData = {
      id: formData.get('id'),
      title: formData.get('title'),
      description: formData.get('description'),
      category: formData.get('category'),
      price: parseFloat(formData.get('price') as string),
      image: formData.get('image'),
      images: JSON.parse(formData.get('images') as string)
    };
    const response = await fetch('/api/products/update', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(productData),
    });
    if (response.ok) {
      alert('Product updated successfully!');
      window.location.href = '/admin';
    } else {
      const result = await response.json();
      alert(`Error updating product: ${result.error}`);
    }
  });
</script>
<style>
  .admin-panel { max-width: 800px; margin: 0 auto; }
  .back-link { display: inline-block; margin-bottom: 2rem; font-weight: 500; color: var(--link-color); }
  .admin-section { background-color: var(--secondary-bg-color); padding: 1.5rem; border-radius: 16px; margin-bottom: 2rem; }
  h1 { border-bottom: 1px solid var(--border-color); padding-bottom: 0.5rem; margin-top: 0; }
  .product-form { display: flex; flex-direction: column; gap: 1rem; }
  .product-form label { font-weight: 500; display: flex; flex-direction: column; gap: 0.25rem; }
  .product-form input, .product-form textarea, .product-form select {
    width: 100%; padding: 0.75rem; font-size: 1rem; border-radius: 8px;
    border: 1px solid var(--border-color); background-color: var(--bg-color); color: var(--text-color);
  }
  .form-row { display: flex; gap: 1rem; }
  .form-row > label { flex: 1; }
  .product-form button {
    background-color: #ff9500;
    color: white; padding: 0.75rem; border: none;
    border-radius: 8px; font-size: 1rem; font-weight: 600; cursor: pointer; margin-top: 1rem;
  }
</style>